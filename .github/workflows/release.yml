name: Release Wave

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release Version'
        required: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  VERSION: "v${{ github.event.inputs.version }}"

defaults:
  run:
    shell: bash

#TODO: Generate change log

jobs:
  ci-test:
    name: CI Test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-10.15, ubuntu-18.04 ]
    steps:
      - uses: actions/checkout@v2

      - name: Build
        run: make all

      - name: Unit Test
        run: make test-ui-ci

  release:
    name: Release Wave
    runs-on: ubuntu-18.04
    needs: ci-test
    steps:
      - uses: actions/checkout@v2

      - name: Setup
        run: make setup

      - name: Build Release
        run: make release

      - name: Commit & Tag
        uses: EndBug/add-and-commit@v5
        with:
          add: '.'
          message: "Release ${{ env.VERSION }}"
          tag: ${{ env.VERSION }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.VERSION }}
          release_name: ${{ env.VERSION }}
          draft: false
          prerelease: true

      - name: Upload MacOS Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "./build/wave-${{ env.VERSION }}-darwin-amd64.tar.gz"
          asset_name: "wave-${{ env.VERSION }}-darwin-amd64.tar.gz"
          asset_content_type: application/gzip

      - name: Upload Linux Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "./build/wave-${{ env.VERSION }}-linux-amd64.tar.gz"
          asset_name: "wave-${{ env.VERSION }}-linux-amd64.tar.gz"
          asset_content_type: application/gzip

      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: "./build/wave-${{ env.VERSION }}-windows-amd64.tar.gz"
          asset_name: "wave-${{ env.VERSION }}-windows-amd64.tar.gz"
          asset_content_type: application/gzip

      - name: Publish distribution ðŸ“¦ to PyPI
          uses: pypa/gh-action-pypi-publish@master
          with:
            password: ${{ secrets.PYPI_API_TOKEN }}
