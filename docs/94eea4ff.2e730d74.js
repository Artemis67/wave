(window.webpackJsonp=window.webpackJsonp||[]).push([[143],{198:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return s}));var a=n(2),r=n(6),o=(n(0),n(302)),l={title:"Plot / Pandas"},i={unversionedId:"examples/plot-pandas",id:"examples/plot-pandas",isDocsHomePage:!1,title:"Plot / Pandas",description:"Plot Pandas dataframes.",source:"@site/docs/examples/plot-pandas.md",slug:"/examples/plot-pandas",permalink:"/wave/docs/examples/plot-pandas",editUrl:"https://github.com/h2oai/wave/edit/master/website/docs/examples/plot-pandas.md",version:"current",sidebar:"someSidebar",previous:{title:"Plot / Events",permalink:"/wave/docs/examples/plot-events"},next:{title:"Plot / Vega-lite",permalink:"/wave/docs/examples/plot-vegalite"}},p=[],c={rightToc:p};function s(e){var t=e.components,l=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},c,l,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Plot Pandas dataframes."),Object(o.b)("div",{className:"cover",style:{backgroundImage:"url("+n(420).default+")"}}),Object(o.b)("pre",null,Object(o.b)("code",Object(a.a)({parentName:"pre"},{className:"language-py"}),"from h2o_wave import site, data, ui\nimport pandas as pd\nimport numpy as np\n\npage = site['/demo']\n\nn = 100\ndf = pd.DataFrame(dict(\n    length=np.random.rand(n),\n    width=np.random.rand(n),\n    data_type=np.random.choice(a=['Train', 'Test'], size=n, p=[0.8, 0.2])\n))\n\n# Plot two numeric columns by each other and color based on a third, categorical column\npage['scatter'] = ui.plot_card(\n    box='1 1 4 5',\n    title='Scatter Plot from Dataframe',\n    data=data(\n        fields=df.columns.tolist(),\n        rows=df.values.tolist(),\n        pack=True,\n    ),\n    plot=ui.plot(marks=[ui.mark(\n        type='point',\n        x='=length', x_title='Length',\n        y='=width', y_title='Width',\n        color='=data_type', shape='circle',\n    )])\n)\n\n# Aggregate the data in pandas and plot a bar chart of the average value of one column by some other column\ndf_agg = df.groupby(['data_type']).mean().reset_index()\npage['bar'] = ui.plot_card(\n    box='1 6 4 5',\n    title='Bar Plot from Aggregated Dataframe',\n    data=data(\n        fields=df_agg.columns.tolist(),\n        rows=df_agg.values.tolist(),\n        pack=True,\n    ),\n    plot=ui.plot(marks=[ui.mark(\n        type='interval',\n        x='=data_type', x_title='Modeling Data Type',\n        y='=length', y_title='Length',\n    )])\n)\n\npage.save()\n")))}s.isMDXComponent=!0},302:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return f}));var a=n(0),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=r.a.createContext({}),s=function(e){var t=r.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},m=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||o;return n?r.a.createElement(f,i(i({ref:t},c),{},{components:n})):r.a.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},420:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/plot-pandas-47ec17d05b1b28f7774807623b918752.png"}}]);