(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{313:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var o=n(0),a=n.n(o);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=a.a.createContext({}),s=function(e){var t=a.a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},f=a.a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(n),f=o,m=u["".concat(i,".").concat(f)]||u[f]||d[f]||r;return n?a.a.createElement(m,l(l({ref:t},c),{},{components:n})):a.a.createElement(m,l({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=f;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},354:function(e,t,n){"use strict";n.r(t),t.default=n.p+"assets/images/plot-vegalite-flex-15c275ce4325805aef371ccd9d94f795.png"},93:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return s}));var o=n(2),a=n(6),r=(n(0),n(313)),i={title:"Plot / Vega-lite / Flex"},l={unversionedId:"examples/plot-vegalite-flex",id:"examples/plot-vegalite-flex",isDocsHomePage:!1,title:"Plot / Vega-lite / Flex",description:"Place Vegalite plots in a flexible layout.",source:"@site/docs/examples/plot-vegalite-flex.md",slug:"/examples/plot-vegalite-flex",permalink:"/wave/docs/examples/plot-vegalite-flex",editUrl:"https://github.com/h2oai/wave/edit/master/website/docs/examples/plot-vegalite-flex.md",version:"current",sidebar:"someSidebar",previous:{title:"Plot / Vega-lite / Form",permalink:"/wave/docs/examples/plot-vegalite-form"},next:{title:"Plot / Altair",permalink:"/wave/docs/examples/plot-altair"}},p=[],c={rightToc:p};function s(e){var t=e.components,i=Object(a.a)(e,["components"]);return Object(r.b)("wrapper",Object(o.a)({},c,i,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Place Vegalite plots in a flexible layout."),Object(r.b)("div",{className:"cover",style:{backgroundImage:"url("+n(354).default+")"}}),Object(r.b)("pre",null,Object(r.b)("code",Object(o.a)({parentName:"pre"},{className:"language-py"}),"from h2o_wave import site, ui, data\n\npage = site['/demo']\npage.drop()\n\npage['meta'] = ui.meta_card(box='', layouts=[\n    ui.layout(\n        breakpoint='xs',\n        width='100%',\n        zones=[\n            ui.zone('top', size='300px', direction=ui.ZoneDirection.ROW, zones=[\n                ui.zone('top_left', size='75%'),\n                ui.zone('top_right', size='1'),\n            ]),\n            ui.zone('bottom', size='500px', direction=ui.ZoneDirection.ROW, zones=[\n                ui.zone('bottom_left', size='1'),\n                ui.zone('bottom_center', size='2'),\n                ui.zone('bottom_right', size='3'),\n            ]),\n        ]\n    )\n])\n\nplot_spec = '''\n{\n  \"description\": \"A simple bar plot with embedded data.\",\n  \"mark\": \"bar\",\n  \"encoding\": {\n    \"x\": {\"field\": \"a\", \"type\": \"ordinal\"},\n    \"y\": {\"field\": \"b\", \"type\": \"quantitative\"}\n  }\n}\n'''\n\nplot_data = data(fields=[\"a\", \"b\"], rows=[\n    [\"A\", 28], [\"B\", 55], [\"C\", 43],\n    [\"D\", 91], [\"E\", 81], [\"F\", 53],\n    [\"G\", 19], [\"H\", 87], [\"I\", 52]\n], pack=True)\n\npage.add('top_left', ui.vega_card(\n    box='top_left',\n    title='Plot',\n    specification=plot_spec,\n    data=plot_data,\n))\npage.add('top_right', ui.vega_card(\n    box='top_right',\n    title='Plot',\n    specification=plot_spec,\n    data=plot_data,\n))\npage.add('bottom_left', ui.vega_card(\n    box='bottom_left',\n    title='Plot',\n    specification=plot_spec,\n    data=plot_data,\n))\npage.add('bottom_center', ui.vega_card(\n    box='bottom_center',\n    title='Plot',\n    specification=plot_spec,\n    data=plot_data,\n))\npage.add('bottom_right', ui.vega_card(\n    box='bottom_right',\n    title='Plot',\n    specification=plot_spec,\n    data=plot_data,\n))\n\npage.save()\n")))}s.isMDXComponent=!0}}]);